#!/usr/bin/env bash
# shellcheck shell=bash disable=SC1091,SC2039,SC2166

./xbps-src binary-bootstrap
echo XBPS_ALLOW_RESTRICTED=yes >> etc/conf

repomain=$PWD/hostdir/binpkgs
repo=$PWD/pkgs
packages="$@"
processed=false

update_version_revision() {
  local file="$1"

  # Substitui 'version=*' pela data atual no formato YYYYMMDD
  sed -i "s/^version=.*/version=$(date +%Y%m%d)/" "$file"

  # Substitui 'revision=*' pela hora atual no formato HHMM
  sed -i "s/^revision=.*/revision=$(date +%H%M)/" "$file"

  echo "As linhas 'version' e 'revision' foram atualizadas em $file."
}

sh_config() {
  local_PATH=/github/void-packages.chili/pkgs
  remote_USER=u537062342
  remote_PATH=/home/u537062342/domains/chililinux.com/public_html/void/current
  remote_PORT=65002
  remote_HOST=154.49.247.66
  verbose=true
}

sh_remote_pull() {
    sh_config
    msg_raw "organization: ${organization}"
    msg_raw "   prefix_DB: ${prefix_DB}"
    msg_raw "     db_name: ${db_name}"
    msg_raw "      branch: ${branch}"
    msg_raw "  local_PATH: ${local_PATH}"
    msg_raw " remote_PATH: ${remote_PATH}"
    msg_raw " remote_USER: ${remote_USER}"
    msg_raw " remote_HOST: ${remote_HOST}"
    msg_raw " remote_PORT: ${remote_PORT}"

    pushd "$local_PATH" >/dev/null 2>&- || exit 1
    msg_info "${cyan}Sincronizando... Puxando do remoto para local ${reset}"
    msg_raw "    Local : ${local_PATH}"
    msg_raw "   Remoto : ${remote_PATH}"
    if $verbose; then
      echo -n "$black"
      rsync --itemize-changes --info=skip0 -Craz -e "ssh -p ${remote_PORT}" "${remote_USER}"@"${remote_HOST}":"${remote_PATH}"/ "${local_PATH}"/
      echo -n "$reset"
    else
      rsync --info=skip0 -Craz -e "ssh -p ${remote_PORT}" "${remote_USER}"@"${remote_HOST}":"${remote_PATH}"/ "${local_PATH}"/
    fi
  done
}

get_template_from_repo() {
  local pkg="$1"
  local dest="$PWD/srcpkgs/$pkg"
  local url="https://raw.githubusercontent.com/chililinux/$pkg/main/template"

  # Verifica se o pacote foi especificado
  if [[ -z "$pkg" ]]; then
    echo "Erro: Nome do pacote não especificado."
    return 1
  fi

  # Cria o diretório de destino
  mkdir -p "$dest"

  # Baixa o arquivo template no diretório correto
  if pushd "$dest" > /dev/null; then
    if curl -f -O "$url"; then
      echo "Template do pacote '$pkg' baixado com sucesso."
    else
      echo "Erro: Não foi possível baixar o template de '$url'."
      return 1
    fi
    popd > /dev/null
  else
    echo "Erro: Não foi possível acessar o diretório '$dest'."
    return 1
  fi
}

for i in ${packages[@]}; do
	if ./xbps-src -j$(nproc) pkg $1; then
		mv -vf $repomain/$1*.xbps $repo/
		mv -vf $repomain/main/$1*.xbps $repo/
		processed=true
		:
	fi
done
if $processed; then
  ./sign.sh
fi
